import telebot
import logging
from telebot import types

logging.basicConfig(format=u'%(levelname)-8s [%(asctime)s] %(message)s', level=logging.ERROR, filename=u'log.txt')

token = "426617203:AAHqKOH-62wRF1XSEFR8NS6372nHMWNR0BE"

bot = telebot.TeleBot(token)

def sendMessage(new_things):
    text_message = "–ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –≤ –º–∞–≥–∞–∑–∏–Ω–µ H&M!\n"
    for i in range(len(new_things)):
        text_message += new_things[i][3]+" "+str(new_things[i][2])+"–†—É–± (–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ "\
                        +str(new_things[i][1])+"–†—É–±.)\n"
        text_message += "–°–∫–∏–¥–∫–∞: "+str(discountCount(new_things[i][2],new_things[i][1]))+"%\n"
        text_message += "–†–∞–∑–º–µ—Ä—ã: "+formatSize(new_things[i][4])+"\n"
        text_message +="http://www2.hm.com/ru_ru/productpage." + new_things[i][0] + ".html\n\n"
    try:
        bot.send_message(158041048, text_message)
    except ValueError as err:
        logging.error(u'–û—à–∏–±–∫–∞ Telegram –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è' + str(err))

def formatSize(size):
    result = ""
    for i in range(len(size)):
        result+= size[i].split('_', 1)[1]+"; "
    return result

def discountCount(newPrice, oldPrice):
    discount = round(100-(newPrice/oldPrice)*100)
    return discount

'''''
@bot.message_handler(commands=['start', 'help'])
def handle_start_help(message):
    markup = types.ReplyKeyboardMarkup()
    markup.row('–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏','–ë—Ä–µ–Ω–¥—ã')
    markup.row('üö´')
    bot.send_message(message.chat.id, "Choose one letter:", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == "–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏":
        bot.send_message(message.chat.id, "–¢–≤–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏")
    elif message.text == "–ë—Ä–µ–Ω–¥—ã":
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –±—Ä–µ–Ω–¥–æ–≤")
    elif message.text == "üö´":
        markdown = types.ReplyKeyboardRemove(selective=False)
        bot.send_message(message.chat.id, "–ü–æ–∫–∞ üòú", reply_markup=markdown)
    else:
        bot.send_message(message.chat.id, "–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã –º–Ω–µ —Ö–æ—á–µ—à—å —Å–∫–∞–∑–∞—Ç—å")

@bot.message_handler(commands=['chatID'])
def handle_start_help(message):
    bot.send_message(message.chat.id, message.chat.id)

bot.polling(none_stop=True, interval=0)
'''''